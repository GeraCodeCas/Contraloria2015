/************************************************************************
 * Module:  Connection.java
 * Author:  Claudia Sandoval
 * Created: 28.May.2003
 * Purpose: Defines the Class Usuario Limitado
 ***********************************************************************/
 
package com.gob;
import java.sql.*;
import java.io.*;
import java.util.*;
import com.consiss.db.*;
import com.consiss.util.tools.*;

public class UsuarioRH {

//Declaración de Variables
private int 			 iIdUsuarioRH;
private String 			 sNombre;
private String 			 sApePaterno;
private String 			 sApeMaterno;
private String 			 sEstatus;
private int 			 iIdUsuario;

private VMatrix			 vmUsr;
private ConnectionJDBC	 oCnn;
//Inicializacion de la Clase
	public UsuarioRH()  throws SQLException, IOException {
		iIdUsuarioRH= 0;
		sNombre		= "";
		sApePaterno	= "";
		sApeMaterno	= "";
		iIdUsuario	= 0;
		
		vmUsr	= new VMatrix();
		oCnn	= new ConnectionJDBC();
	}

 //Creación de las Propiedades
	//public void 			SetIdUsuarioRH(int iDATA)		{	iIdUsuarioLimitado 	= iDATA;}
	public int 				GetIdUsuarioRH() 				{	return iIdUsuarioRH;	}
	public int				GetIdUsuarioRH(int iPos)		{
		int iGetIdUsuarioRH = -1;
		try { iGetIdUsuarioRH = java.lang.Integer.parseInt((((Vector)vmUsr.getVMatrixAll().elementAt(0)).elementAt(iPos)+"")); }
		catch(Throwable e){ System.out.println("oUsuarioRH.GetIdUsuarioRH: No se ejecutó con exito " + e + " Pos:" + iPos + " [data]:" + ((Vector)vmUsr.getVMatrixAll().elementAt(0)).elementAt(iPos)); }
		finally{ return iGetIdUsuarioRH; }
	}
	
	//public void 			SetNombre(String sDATA) 		{	sNombre 		= sDATA;}
	public String			GetNombre() 					{	return sNombre;	}
	public String			GetNombre(int iPos)				{	return ((Vector)vmUsr.getVMatrixAll().elementAt(1)).elementAt(iPos).toString();	}
	
	public String			GetApePaterno() 				{	return sApePaterno;	}
	public String			GetApePaterno(int iPos)			{	return ((Vector)vmUsr.getVMatrixAll().elementAt(2)).elementAt(iPos).toString();	}
	
	public String			GetApeMaterno() 				{	return sApeMaterno;	}
	public String			GetApeMaterno(int iPos)			{	return ((Vector)vmUsr.getVMatrixAll().elementAt(3)).elementAt(iPos).toString();	}
	
	public int 				GetIdUsuario() 					{	return iIdUsuario;	}
	public int				GetIdUsuario(int iPos)			{
		int iGetIdUsuario = -1;
		try { iGetIdUsuario = java.lang.Integer.parseInt((((Vector)vmUsr.getVMatrixAll().elementAt(4)).elementAt(iPos)+"")); }
		catch(Throwable e){ System.out.println("oUsuarioRH.GetIdUsuario: No se ejecutó con exito " + e + " Pos:" + iPos + " [data]:" + ((Vector)vmUsr.getVMatrixAll().elementAt(4)).elementAt(iPos)); }
		finally{ return iGetIdUsuario; }
	}

	public String			GetEstatus()					{	return sEstatus; }
	public String			GetEstatus(int iPos)			{	return ((Vector)vmUsr.getVMatrixAll().elementAt(5)).elementAt(iPos)!=null?((Vector)vmUsr.getVMatrixAll().elementAt(5)).elementAt(iPos)+"":"";	}
		
//Metodos públicos
	public boolean Get(int pIdUsuarioRH) throws SQLException, IOException {
		oCnn.Open();
		ResultSet rs;
		String sSql;
		sSql = "SELECT IdUsuarioRH, Nombre, ApePaterno, ApeMaterno, a.IdUsuario, b.Estatus FROM UsuarioRH a, Usuario b WHERE a.IdUsuario = b.IdUsuario AND IdUsuarioRH = " + pIdUsuarioRH;
		rs = oCnn.Execute(sSql);
		if(rs.next()){
			CargaDatos(rs.getInt("IdUsuarioRH"), rs.getString("Nombre"), rs.getString("ApePaterno"), 
					rs.getString("ApeMaterno"), rs.getInt("IdUsuario"), rs.getString("Estatus"));
			rs.close();
			rs = null;
			return true;
		}	
		rs.close();
		rs = null;
		oCnn.Close();
		return false;
	}
	

	public int GetAll() throws SQLException, IOException {
		if(vmUsr.getNumRows()>0) return vmUsr.getNumRows();
		oCnn.Open();
		ResultSet rs = null;
		String sSql;
		sSql = "SELECT IdUsuarioRH, Nombre, ApePaterno, ApeMaterno, a.IdUsuario, b.Estatus FROM UsuarioRH a, Usuario b WHERE a.IdUsuario = b.IdUsuario";
		try {
			rs = oCnn.Execute(sSql);
			vmUsr.setVMatrixNumCols(6);
			while (rs.next()) {
				String saTabla [] = 
					{rs.getString("IdUsuarioRH"), rs.getString("Nombre"), rs.getString("ApePaterno"), 
					rs.getString("ApeMaterno"), rs.getString("IdUsuario"), rs.getString("Estatus") };
				vmUsr.setVMatrixRow(saTabla);
			}
			rs.close();
			rs = null;
		}catch(Throwable e){
			System.out.println("Error en oUsuarioRH.GetAll: " + e + " SQL:" + sSql);
		}finally{
			if(oCnn!=null) oCnn.Close(); 
			return vmUsr.getNumRows();
		}
	}

	public int Insert(String pNombre, String pApePaterno, String pApeMaterno, int pIdUsuario) throws SQLException, IOException {
		String sSql = "";
		try {	
			oCnn.Open();
			iIdUsuarioRH = 0;
			sSql = "SELECT ISNULL(MAX(IdUsuarioRH), 0) AS MaxId FROM UsuarioRH";
			ResultSet oRs;
			oRs = oCnn.Execute(sSql);
			if(oRs.next()){ iIdUsuarioRH = oRs.getInt("MaxId"); }
			oRs.close();
			oRs = null;
			iIdUsuarioRH++;
			sSql = "INSERT INTO UsuarioRH(IdUsuarioRH, Nombre, ApePaterno, ApeMaterno, IdUsuario) VALUES (" +
				iIdUsuarioRH + ", '" + pNombre + "', '" + pApePaterno + "', '" + pApeMaterno + "', " + pIdUsuario + " )";
			oCnn.Execute(sSql);
			oCnn.Close();			
			return iIdUsuarioRH;
		}catch(Throwable e){
			System.out.println("Error en oUsuarioRH.Insert: " + e + " SQL:" + sSql);
			return -1;
		}

	}
	public boolean Update(int pIdUsuarioRH, String pNombre, String pApePaterno, String pApeMaterno, 
			int pIdUsuario, String pEstatus) throws SQLException, IOException {
		String sSql = "";
		try {
			oCnn.Open();
			sSql = "UPDATE UsuarioRH SET Nombre = '" + pNombre + "', ApePaterno = '" + pApePaterno + "', ApeMaterno = '" + pApeMaterno + 
					"' WHERE IdUsuarioRH = " + pIdUsuarioRH;
			oCnn.Execute(sSql);
			oCnn.Close();
			Usuario oUsuario = new Usuario();
			oUsuario.UpdateEstatus(pIdUsuario, pEstatus);
			return true;
		}catch(Throwable e){
			System.out.println("Error en oUsuarioRH.Update: " + e + " SQL:" + sSql);
			oCnn.Close();
			return false;
		}
	}
	
	public boolean Delete(int pIdUsuarioRH) throws SQLException, IOException {
		String sSql = "";
		try {
			oCnn.Open();
			sSql = "DELETE FROM UsuarioRH WHERE IdUsuarioRH = " + pIdUsuarioRH;
			oCnn.Execute(sSql);
			//System.out.println(sSql);
			Usuario oUsuario = new Usuario();
			oUsuario.Delete(iIdUsuario);
			return true;
		}catch(Throwable e){
			System.out.println("Error en oUsuarioRH.Delete: " + e + " SQL:" + sSql);
			oCnn.Close();
			return false;
		}
	}
//Metodos Internos
	private void CargaDatos(int pIdUsuarioRH, String pNombre, String pApePaterno, String pApeMaterno, 
			int	pIdUsuario, String pEstatus){
		iIdUsuarioRH= pIdUsuarioRH;
		sNombre 	= pNombre;
		sApePaterno	= pApePaterno;
		sApeMaterno	= pApeMaterno;
		iIdUsuario	= pIdUsuario;
		sEstatus	= pEstatus;
	}
}