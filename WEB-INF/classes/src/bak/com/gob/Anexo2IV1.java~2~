/************************************************************************
 * Module:  Connection.java
 * Author:  Julio Enrique Espinosa Torres
 * Created: 29.Oct.2002
 * Purpose: Defines the Class Anexo2IV1
 ***********************************************************************/
 
package com.gob;
import java.sql.*;
import java.io.*;
import java.util.*;
import com.consiss.db.*;
import com.consiss.util.tools.*;

public class Anexo2IV1 {

//Declaración de Variables
private int				iIdAnexo;
private String 		sNombreAnexo;
private int 			iIdFuncionario;
private int				iIdRenglon;
private String 			sNoCuenta;
private String 			sNombre;
private String 			sChequera;
private String 			sBanco;
private String 			sInicial;
private String 			sFinal;
private String 			sNumero;
private String 			sFecha;
private String 			sImporte;
private long			iGetAllCount;
private VMatrix		 	vmFuncionario;
private ConnectionJDBC	 	oCnn;

//Inicializacion de la Clase
public Anexo2IV1()  throws SQLException, IOException {
	String sSql;
	iIdAnexo		= 0;
	sNombreAnexo	= "";
	iIdFuncionario  = 0;
	iIdRenglon		= 0;
	sNoCuenta		= "";
	sNombre			= "";
	sChequera		= "";
	sBanco			= "";
	sInicial		= "";
	sFinal			= "";
	sNumero			= "";
	sFecha			= "";
	sImporte		= "";
	vmFuncionario	= new VMatrix();
	oCnn			= new ConnectionJDBC();
	iGetAllCount	= 0;
	oCnn.Open();
	ResultSet oRs = null;
	sSql = "SELECT IdAnexo, Clave, Nombre FROM Anexo WHERE Clave = 'Anexo II.4.1'";
	try {
		oRs = oCnn.Execute(sSql);
		if (oRs.next()) {
			iIdAnexo 		= oRs.getInt("IdAnexo");
			sNombreAnexo	= oRs.getString("Nombre");
		}
		oRs.close();
		oRs = null;
	}catch(Throwable e){
		System.out.println("Error en oAnexo3VII.init: " + e + " SQL:" + sSql);
	}finally{
		if(oCnn!=null) oCnn.Close(); 
	}
}
//Creación de las Propiedades
	public int		GetIdAnexo() 					{	return iIdAnexo;			}
	public long		GetAllCount()					{	return iGetAllCount; }
	public String	GetNombreAnexo() 				{	return sNombreAnexo;			}
// Propiedades del IdRenglon
	public void SetIdRenglon(int iDATA){	
				 iIdRenglon 		= iDATA;	
	}
	public int GetIdRenglon(){	
				 return iIdRenglon;
	}

//Para el Vmatrix	
	public int GetIdRenglon(int iPos){	
		  int iIdRenglon = -1;
		  try{ 
		       iIdRenglon = java.lang.Integer.parseInt((((Vector)vmFuncionario.getVMatrixAll().elementAt(0)).elementAt(iPos)+"")); 
		  }
		  catch(Throwable e){ 
		        System.out.println("oFuncionario.GetIdTipo: No se ejecutó con exito " + e + " Pos:" + iPos + " [data]:" + ((Vector)vmFuncionario.getVMatrixAll().elementAt(0)).elementAt(iPos)); 
		  }
		  finally{ 
		        return iIdRenglon; 
		  }
	}
// Propiedades del IdRenglon
	
	public void 	SetIdFuncionario(int iDATA){	iIdFuncionario 	= iDATA;	}
	public int		GetIdFuncionario() {	return iIdFuncionario;		}
	public int		GetIdFuncionario(int iPos){
		int iGetIdFuncionario = -1;
		try { iGetIdFuncionario = java.lang.Integer.parseInt((((Vector)vmFuncionario.getVMatrixAll().elementAt(1)).elementAt(iPos)+"")); }
		catch(Throwable e){ System.out.println("oFuncionario.GetIdFuncionario: No se ejecutó con exito " + e + " Pos:" + iPos + " [data]:" + ((Vector)vmFuncionario.getVMatrixAll().elementAt(1)).elementAt(iPos)); }
		finally{ return iGetIdFuncionario; }
	}
	
	public void 	SetNoCuenta(String sDATA) 		{	sNoCuenta 		= sDATA;	}
	public String	GetNoCuenta() 					{	return sNoCuenta;			}
	public String	GetNoCuenta(int iPos)		{	return (String)((Vector)vmFuncionario.getVMatrixAll().elementAt(2)).elementAt(iPos);			}

	public void 	SetNombre(String sDATA) 		{	sNombre 		= sDATA;	}
	public String	GetNombre() 					{	return sNombre;			}
	public String	GetNombre(int iPos)		{	return (String)((Vector)vmFuncionario.getVMatrixAll().elementAt(3)).elementAt(iPos);			}
	
	public void 	SetChequera(String sDATA) 		{	sChequera 		= sDATA;	}
	public String	GetChequera() 					{	return sChequera;			}
	public String	GetChequera(int iPos)		{	return (String)((Vector)vmFuncionario.getVMatrixAll().elementAt(4)).elementAt(iPos);			}
	
	
	public void 	SetBanco(String sDATA) 		{	sBanco 		= sDATA;	}
	public String	GetBanco() 					{	return sBanco;			}
  	public String	GetBanco(int iPos)		{	return (String)((Vector)vmFuncionario.getVMatrixAll().elementAt(5)).elementAt(iPos);			}
	
	public void 	SetInicial(String sDATA) 		{	sInicial 		= sDATA;	}
	public String	GetInicial() 					{	return sInicial;			}
  	public String	GetInicial(int iPos)		{	return (String)((Vector)vmFuncionario.getVMatrixAll().elementAt(6)).elementAt(iPos);			}
	
	public void 	SetFinal(String sDATA) 		{	sFinal 		= sDATA;	}
	public String	GetFinal() 					{	return sFinal;			}
	public String	GetFinal(int iPos)		{	return (String)((Vector)vmFuncionario.getVMatrixAll().elementAt(7)).elementAt(iPos);			}
	
	public void 	SetNumero(String sDATA) 		{	sNumero 		= sDATA;	}
	public String	GetNumero() 					{	return sNumero;			}
	public String	GetNumero(int iPos)		{	return (String)((Vector)vmFuncionario.getVMatrixAll().elementAt(8)).elementAt(iPos);			}

	public void 	SetFecha(String sDATA) 		{	sFecha 		= sDATA;	}
	public String	GetFecha() 					{	return sFecha;			}
	public String	GetFecha(int iPos)		{	return (String)((Vector)vmFuncionario.getVMatrixAll().elementAt(9)).elementAt(iPos);			}

	public void 	SetImporte(String sDATA) 		{	sImporte 		= sDATA;	}
	public String	GetImporte() 					{	return sImporte;			}
	public String	GetImporte(int iPos)		{	return (String)((Vector)vmFuncionario.getVMatrixAll().elementAt(10)).elementAt(iPos);			}

//Metodos públicos
	public boolean Get(int pIdRenglon) throws SQLException, IOException {
		oCnn.Open();
		ResultSet rs;
		String sSql;
		sSql = "SELECT IdFuncionario, IdRenglon, NoCuenta, Nombre, Chequera, Banco, Inicial, Final, Numero, Fecha, Importe FROM Anexo2IV1 WHERE IdRenglon = " + pIdRenglon;
		rs = oCnn.Execute(sSql);
		if(rs.next()){
			CargaDatos(rs.getInt("IdFuncionario"), rs.getInt("IdRenglon"), rs.getString("NoCuenta"), 
					rs.getString("Nombre"), rs.getString("Chequera"), rs.getString("Banco"),
					rs.getString("Inicial"), rs.getString("Final"), rs.getString("Numero"),
					rs.getString("Fecha"), rs.getString("Importe")) ;
			rs.close();
			rs = null;
			return true;
		}	
		rs.close();
		rs = null;
		oCnn.Close();
		return false;
	}

	
	public int GetAll(int pIdFuncionario) throws SQLException, IOException {
		if(vmFuncionario.getNumRows()>0) return vmFuncionario.getNumRows();
		oCnn.Open();
		ResultSet rs = null;
		String sSql;
		sSql = "sel_Anexo2iv1GetAll_SP " + pIdFuncionario;
		try {
			rs = oCnn.Execute(sSql);
			vmFuncionario.setVMatrixNumCols(11);
			while (rs.next()) {
				String saTabla [] = {rs.getString("IdRenglon"), rs.getString("IdFuncionario"), rs.getString("NoCuenta"), 
					rs.getString("Nombre"), rs.getString("Chequera"), rs.getString("Banco"),
					rs.getString("Inicial"), rs.getString("Final"), rs.getString("Numero"),
					rs.getString("Fecha"), rs.getString("Importe")};
				vmFuncionario.setVMatrixRow(saTabla);
			}
			rs.close();
			rs = null;
		}catch(Throwable e){
			System.out.println("Error en Funcionario.GetAll: " + e + " SQL:" + sSql);
		}finally{
			if(oCnn!=null) oCnn.Close(); 
			return vmFuncionario.getNumRows();
		}
	}
	
	//Paginacion Anexo2IV1
	public int GetAll(int pIdFuncionario, int pItemsPagina, int pPagina) throws SQLException, IOException {
		if(vmFuncionario.getNumRows()>0) return vmFuncionario.getNumRows();
		ResultSet rs = null;
		String sSql="";
		try {
			oCnn.Open();
			sSql = "sel_Anexo2iv1CountAll " + pIdFuncionario;
			rs = oCnn.Execute(sSql);
			if (rs.next()) {
				iGetAllCount = rs.getLong("AllCount");
			}
			rs.close();
			rs = null;
			
			sSql = "sel_Anexo2iv1GetAll " + pIdFuncionario + ", " + pItemsPagina + ", " + pPagina;
			rs = oCnn.Execute(sSql);
			vmFuncionario.setVMatrixNumCols(11);
			while (rs.next()) {
				String saTabla [] = {rs.getString("IdRenglon"), rs.getString("IdFuncionario"), rs.getString("NoCuenta"), 
					rs.getString("Nombre"), rs.getString("Chequera"), rs.getString("Banco"),
					rs.getString("Inicial"), rs.getString("Final"), rs.getString("Numero"),
					rs.getString("Fecha"), rs.getString("Importe")};
				vmFuncionario.setVMatrixRow(saTabla);
			}
			rs.close();
			rs = null;
		}catch(Throwable e){
			System.out.println("Error en Funcionario.GetAll: " + e + " SQL:" + sSql);
		}finally{
			if(oCnn!=null) oCnn.Close(); 
			return vmFuncionario.getNumRows();
		}
	}
	
	public int GetPos(int pIdFuncionario) throws SQLException, IOException {
		GetAll(pIdFuncionario);
		return ((Vector)vmFuncionario.getVMatrixAll().elementAt(0)).indexOf((pIdFuncionario+""), 0);
	}
	
	public boolean Insert(int pIdFuncionario, String pNoCuenta, String pNombre, String pChequera,
		      String pBanco, String pInicial,String pFinal, 
              String pNumero, String pFecha, String pImporte) throws SQLException, IOException {
		String sSql;
	    try{
		sSql = "INSERT INTO Anexo2IV1(IdFuncionario, NoCuenta, Nombre, Chequera, Banco, Inicial, Final, Numero, Fecha, Importe, UltimaCarga) ";
		sSql = sSql + "VALUES (" + pIdFuncionario + ", ";
		sSql = sSql + "'" + pNoCuenta + "', ";
		sSql = sSql + "'" + pNombre + "', ";
		sSql = sSql + "'" + pChequera + "', ";
		sSql = sSql + "'" + pBanco + "', ";
		sSql = sSql + "'" + pInicial + "', ";
		sSql = sSql + "'" + pFinal + "', ";
		sSql = sSql + "'" + pNumero + "', ";
		sSql = sSql + "'" + pFecha + "', ";
		sSql = sSql + "'" + pImporte + "', 0)";
		oCnn.Open();
		oCnn.Execute(sSql);
		oCnn.Close();
		return true;
            }catch(Throwable e){
			System.out.println("Error en Anexo2IV1.Insert: ");
		}
		return false;
	}
	
	public boolean Update(int pIdRenglon, String pNoCuenta, String pNombre, String pChequera,
			      String pBanco, String pInicial,String pFinal, 
			      String pNumero, String pFecha, String pImporte) throws SQLException, IOException {
		String sSql;
		try{
			sSql = "UPDATE Anexo2IV1 SET ";
			sSql = sSql + "NoCuenta = '" + pNoCuenta + "', ";
			sSql = sSql + "Nombre = '" + pNombre + "', ";
			sSql = sSql + "Chequera = '" + pChequera + "', ";
			sSql = sSql + "Banco = '" + pBanco + "', ";
			sSql = sSql + "Inicial = '" + pInicial + "', ";
			sSql = sSql + "Final = '" + pFinal + "', ";
			sSql = sSql + "Numero = '" + pNumero + "', ";
			sSql = sSql + "Fecha = '" + pFecha + "', ";
			sSql = sSql + "Importe = '" + pImporte + "', UltimaCarga = 0";
			sSql = sSql + "WHERE IdRenglon = " + pIdRenglon;
			oCnn.Open();
			oCnn.Execute(sSql);
			oCnn.Close();
			return true;
		}catch(Throwable e){
			System.out.println("Error en Anexo2IV1.Update: ");
		}
		return false;
	}
	
	public boolean Delete(int pIdRenglon) throws SQLException, IOException {
		  String sSql;
          try{
			sSql = "DELETE FROM Anexo2IV1 WHERE IdRenglon = " + pIdRenglon;
			oCnn.Open();
			oCnn.Execute(sSql);
			oCnn.Close();
			return true;
          }catch(Throwable e){
			System.out.println("Error en Anexo2IV1.Delete: ");
		}
		return false;
	}
	public boolean Undo(int pIdFuncionario) throws SQLException, IOException {
		String sSql = "";
        try{
			sSql = "DELETE FROM Anexo2IV1 WHERE IdFuncionario = " + pIdFuncionario + " AND UltimaCarga = 1";
			oCnn.Open();
			oCnn.Execute(sSql);
			oCnn.Close();
			return true;
		}catch(Throwable e){
			System.out.println("Error en Anexo2IV1.Undo: " + e + " SQL:" + sSql);
		}
		return false;
	}
	public boolean DeleteAll(int pIdFuncionario) throws SQLException, IOException {
	    String sSql = "";
        try{
			sSql = "DELETE FROM Anexo2IV1 WHERE IdFuncionario = " + pIdFuncionario;
			oCnn.Open();
			oCnn.Execute(sSql);
			oCnn.Close();
			return true;
                    }catch(Throwable e){
			System.out.println("Error en Anexo2IV1.DeleteAll: " + e + " SQL:" + sSql);
		}
		return false;
	}
//Metodos Internos
	private void CargaDatos(int pIdFuncionario, int	pIdRenglon, String pNoCuenta, String pNombre, String pChequera,
			      String pBanco, String pInicial,String pFinal, 
			      String pNumero, String pFecha, String pImporte){
		iIdFuncionario	= pIdFuncionario;
		iIdRenglon 	= pIdRenglon;
		sNoCuenta	= pNoCuenta;
		sNombre		= pNombre;
		sChequera 	= pChequera;
		sBanco		= pBanco;
		sInicial	= pInicial;
		sFinal		= pFinal;
		sNumero		= pNumero;
		sFecha		= pFecha;
		sImporte	= pImporte;
	}
	
	public String setHistory(int iIdFuncionario, String sRutaHistoria, String sRutaAttach, String iProceso, 
			String hsClave, String hsNombreUA, String hsImagenUG, String hsNombreUG, String sFuncionarioEntrante,
			String sFuncionarioSaliente, String sFecha ){
		String sArchivo = "";
		String sError = "";
		try
			{
			AnexoEstatus oAnexoEstatus = new AnexoEstatus();
			ArchivoHistorico oArchivo 	=  new ArchivoHistorico();
			ArchivoHistorico oArchivowa =  new ArchivoHistorico();
			char c = '"';
			String sSalto = "";
			String sAnexo =  "";
			int iIdAnexo = 0;
			String sEstatus = "";
			String sAux = "";
			oArchivo.AbreArchivo(sRutaHistoria, "fAnexo2IV1.html"); 
			oArchivowa.AbreArchivo(sRutaAttach, "fAnexo2IV1.html");	
			java.text.DecimalFormat FormatoDecimal = new java.text.DecimalFormat("###,##0.00");
			
			sAnexo 						= "II.4";
			DetalleAnexo2IV1 oDetalleAnexo2IV1 	= new DetalleAnexo2IV1();
			iIdAnexo 					= GetIdAnexo();
			oAnexoEstatus.Get(iIdFuncionario, iIdAnexo);
			sEstatus 					= oAnexoEstatus.GetEstatus();
			sAux = "\n				<tr><TD colspan='3' class='TituloParrafo' width='100%'>ANEXO II.4.1 - DETALLE DE LA SITUACIÓN DE BANCOS</TD></tr>" + sSalto;
			/* ENCABEZADO INICIO*/
			hHeaderAnexo ohHeaderAnexo = new hHeaderAnexo();
			ohHeaderAnexo.SetHeader(iIdFuncionario, iIdAnexo, sAnexo, oArchivo, 
				oArchivowa, sAux, iProceso, hsClave, hsNombreUA, 
				hsImagenUG, hsNombreUG, sFuncionarioEntrante, sFuncionarioSaliente, sFecha);
			/* ENCABEZADO FIN*/
			sArchivo = "	<TABLE cellPadding='0' cellSpacing='0' width='100%' BORDER='1' BORDERCOLOR='white'>" + sSalto;
			sArchivo += "		<TR align='middle'>" + sSalto;
			sArchivo += "			<td class='TituloMenu'>No. Cuenta</TD>" + sSalto;
			sArchivo += "			<td class='TituloMenu'>Nombre de la Institución</TD>" + sSalto;
			sArchivo += "			<td class='TituloMenu' width='100%' height='100%'>" + sSalto;
			sArchivo += "					<table cellPadding='0' cellSpacing='0' width='100%'  height='100%'> " + sSalto;
			sArchivo += "						<tr align='middle'><td class='TituloMenu' colspan='2'>Saldo Según</td></tr>" + sSalto;
			sArchivo += "						<tr align='middle' ><td width='50%' class='TituloMenu'>Chequera</td><td width='50%' class='TituloMenu'>Banco</td></tr>" + sSalto;
			sArchivo += "					</table></TD>" + sSalto;
			sArchivo += "			<td class='TituloMenu' width='100%' height='100%'>" + sSalto;
			sArchivo += "					<table cellPadding='0' cellSpacing='0' width='100%'  height='100%'> " + sSalto;
			sArchivo += "						<tr align='middle'><td class='TituloMenu' colspan='2'>Relación de Talonarios/Póliza</td></tr>" + sSalto;
			sArchivo += "						<tr align='middle' ><td width='50%' class='TituloMenu'>Inicial</td>" + sSalto;
			sArchivo += "					<td width='50%' class='TituloMenu'>Final</td></tr>" + sSalto;
			sArchivo += "					</table></TD>" + sSalto;
			sArchivo += "			<td class='TituloMenu' width='300' height='100%'>" + sSalto;
			sArchivo += "					<table cellPadding='0' cellSpacing='0' width='300'  height='100%'> " + sSalto;
			sArchivo += "						<tr align='middle'><td class='TituloMenu' colspan='3'>Último Cheque Expedido por cada Chequera</td></tr>" + sSalto;
			sArchivo += "						<tr align='middle' ><td class='TituloMenu' width='30%'>Número</td>" + sSalto;
			sArchivo += "						<td class='TituloMenu' width='40%'>Fecha</td>" + sSalto;
			sArchivo += "						<td class='TituloMenu' width='30%'>Importe</td></tr>" + sSalto;
			sArchivo += "					</table></TD>" + sSalto;
			sArchivo += "		</TR>" + sSalto;
			oArchivo.Escribe(sArchivo);
			oArchivowa.Escribe(sArchivo);
			sArchivo = "";
			if(!sEstatus.equals("0")){
				int intContador = 0;
				String sBackColor = "";
				GetAll(iIdFuncionario);
				for(int i=0;i<GetAll(iIdFuncionario);i++){
					String vIdRenglon=GetIdRenglon(i)!=-1?GetIdRenglon(i)+"":"0";
					String vNoCuenta= GetNoCuenta(i)!=null?GetNoCuenta(i):"";
					String vNombre 	= GetNombre(i)!=null?GetNombre(i):"";
					String vChequera= GetChequera(i)!=null?GetChequera(i):"";
					String vBanco 	= GetBanco(i)!=null?GetBanco(i):"";
					String vInicial = GetInicial(i)!=null?GetInicial(i):"";
					String vFinal 	= GetFinal(i)!=null?GetFinal(i):"";
					String vNumero	= GetNumero(i)!=null?GetNumero(i):"";
					String vFecha 	= GetFecha(i)!=null?GetFecha(i):"";
					String vImporte = GetImporte(i)!=null?GetImporte(i):"";
					intContador = intContador + 1;
					if (intContador%2 == 0)	{sBackColor = "#ffffff";}
					else					{sBackColor = "#eeeeee";}
					sArchivo = "		<TR align='left' bgcolor='" + sBackColor + "' " + sSalto;
					sArchivo += "			onMouseOver = 'MouseDentro(this);'" + sSalto;
					sArchivo += "			onMouseOut  = " + c + "MouseFuera(this,'" + sBackColor + "');" + c + ">" + sSalto;
					sArchivo += "			<TD>&nbsp;<a onmouseover=" + c + "this.style.cursor='hand'" + c + " style='cursor:normal'>" + vNoCuenta + "</a></TD>" + sSalto;
					sArchivo += "			<TD>&nbsp;<a onmouseover=" + c + "this.style.cursor='hand'" + c + " style='cursor:normal'>" + vNombre + "</a></TD>" + sSalto;
					sArchivo += "			<TD><table cellPadding='0' cellSpacing='0' width='100%'> " + sSalto;
					sArchivo += "						<tr align='middle'>" + sSalto;
					sArchivo += "							<td width='50%'>&nbsp;<a onmouseover=" + c + "this.style.cursor='hand'" + c + " style='cursor:normal'>" + FormatoDecimal.format(new Float(!vChequera.equals("")?vChequera:"0")) + "</a></td>" + sSalto;
					sArchivo += "							<td width='50%'>&nbsp;<a onmouseover=" + c + "this.style.cursor='hand'" + c + " style='cursor:normal'>" + FormatoDecimal.format(new Float(!vBanco.equals("")?vBanco:"0")) + "</a></td>" + sSalto;
					sArchivo += "						</tr>" + sSalto;
					sArchivo += "					</table></TD>" + sSalto;
					sArchivo += "			<TD><table cellPadding='0' cellSpacing='0' width='100%'> " + sSalto;
					sArchivo += "						<tr align='middle'>" + sSalto;
					sArchivo += "							<td width='50%'>&nbsp;<a onmouseover=" + c + "this.style.cursor='hand'" + c + " style='cursor:normal'>" + vInicial + "</a></td>" + sSalto;
					sArchivo += "							<td width='50%'>&nbsp;<a onmouseover=" + c + "this.style.cursor='hand'" + c + " style='cursor:normal'>" + vFinal + "</a></td>" + sSalto;
					sArchivo += "						</tr>" + sSalto;
					sArchivo += "					</table></TD>" + sSalto;
					sArchivo += "			<TD><table cellPadding='0' cellSpacing='0' width='100%'> " + sSalto;
					sArchivo += "						<tr align='middle'>" + sSalto;
					sArchivo += "							<td width='33%'>&nbsp;<a onmouseover=" + c + "this.style.cursor='hand'" + c + " style='cursor:normal'>" + vNumero + "</a></td>" + sSalto;
					sArchivo += "							<td width='33%'>&nbsp;<a onmouseover=" + c + "this.style.cursor='hand'" + c + " style='cursor:normal'>" + vFecha + "</a></td>" + sSalto;
					sArchivo += "							<td width='33%' align='right'>&nbsp;<a onmouseover=" + c + "this.style.cursor='hand'" + c + " style='cursor:normal'>" + FormatoDecimal.format(new Float(!vImporte.equals("")?vImporte:"0")) + "</a></td>" + sSalto;
					sArchivo += "						</tr>" + sSalto;
					sArchivo += "					</table></TD>" + sSalto;
					sArchivo += "		</TR>" + sSalto;
					oArchivo.Escribe(sArchivo);
					oArchivowa.Escribe(sArchivo);
					sArchivo = "";
				}
				sArchivo = "	</TABLE>" + sSalto;
				sArchivo += "<br>" + sSalto;
				sArchivo += "<TABLE cellPadding='0' cellSpacing='0' width='80%' BORDER='0' align='center'>" + sSalto;
				sArchivo += "		<tr>" + sSalto;
				sArchivo += "			<td width='50%' valign='top' align='center'>" + sSalto;
				sArchivo += "				<TABLE cellPadding='0' cellSpacing='0' width='90%' BORDER='1' BORDERCOLOR='white'>" + sSalto;
				sArchivo += "					<TR align='middle'><td class='TituloMenu' colspan='4'>Firmas Registradas</TD></TR>" + sSalto;
				sArchivo += "					<TR align='middle'><td class='TituloMenu'>Nombre</TD><td class='TituloMenu'>Cargo</TD></TR>" + sSalto;
				oArchivo.Escribe(sArchivo);
				oArchivowa.Escribe(sArchivo);
				sArchivo = "";
				
				intContador = 0;
				sBackColor = "";	
				oDetalleAnexo2IV1.GetAll(iIdFuncionario);
				for(int i=0;i<oDetalleAnexo2IV1.GetAll(iIdFuncionario);i++){
					String vIdRenglonDetalle		= oDetalleAnexo2IV1.GetIdRenglon(i)!=-1?oDetalleAnexo2IV1.GetIdRenglon(i)+"":"0";
					String vNombreFirma 				= oDetalleAnexo2IV1.GetNombreFirma(i)!=null?oDetalleAnexo2IV1.GetNombreFirma(i):"";
					String vCargo						    = oDetalleAnexo2IV1.GetCargo(i)!=null?oDetalleAnexo2IV1.GetCargo(i):"";
					intContador = intContador + 1;
					if (intContador%2 == 0)	{sBackColor = "#ffffff";}
					else					{sBackColor = "#eeeeee";}
					sArchivo = "		<TR align='left' bgcolor='" + sBackColor + "' " + sSalto;
					sArchivo += "			onMouseOver = 'MouseDentro(this);'" + sSalto;
					sArchivo += "			onMouseOut  = " + c + "MouseFuera(this,'" + sBackColor + "');" + c + ">" + sSalto;
					sArchivo += "			<TD width='50%' align='center'>&nbsp;<a onmouseover=" + c + "this.style.cursor='hand'" + c + " style='cursor:normal'>" + vNombreFirma + "</a></TD>" + sSalto;
					sArchivo += "			<TD width='50%' align='center'>&nbsp;<a onmouseover=" + c + "this.style.cursor='hand'" + c + " style='cursor:normal'>" + vCargo + "</a></TD>" + sSalto;
					sArchivo += "		</TR>" + sSalto;
					oArchivo.Escribe(sArchivo);
					oArchivowa.Escribe(sArchivo);
					sArchivo = "";
				}
				sArchivo = "	</TABLE></td>" + sSalto;
				sArchivo += "	<td align='center' width='50%' valign='top'>" + sSalto;
				oAnexoEstatus.Get(iIdFuncionario, iIdAnexo);
				String vChequesSinEntregar 		= oAnexoEstatus.GetObservacion()!=null?oAnexoEstatus.GetObservacion():"";
				sArchivo += "	<TABLE cellPadding='0' cellSpacing='0' width='50%' BORDER='1' BORDERCOLOR='white'>" + sSalto;
				sArchivo += "		<TR align='middle'><td class='TituloMenu' colspan='2'><a onmouseover=" + c + "this.style.cursor='hand'" + c + " style='cursor:normal'>Cantidad de Cheques sin Entregar</a></TD></TR>" + sSalto;
			   	sBackColor = "#ffffff";
				sArchivo += "		<TR align='left' bgcolor='" + sBackColor + "'>" + sSalto;
				sArchivo += "			<TD align='center'>&nbsp;<a onmouseover=" + c + "this.style.cursor='hand'" + c + " style='cursor:normal'><INPUT readonly style='BORDER:0;background-color: transparent;CURSOR:HAND;text-align:center' class='txtNumeric' name='sChequesSinEntregar' id='sChequesSinEntregar' type='Text' size='10' value='" + vChequesSinEntregar + "'></a></TD></TR>" + sSalto;
				sArchivo += "	</TABLE></td>" + sSalto;
				sArchivo += "	</tr>" + sSalto;
				sArchivo += "	</table><br>" + sSalto;
				oArchivo.Escribe(sArchivo);
				oArchivowa.Escribe(sArchivo);
				sArchivo = "";
			} else {
				sArchivo += "	<TABLE width='100%'>" + sSalto;
				sArchivo += "		<TR><TD align='center'><H1 style='size=+2'><br>ESTE ANEXO NO APLICA</H1></TD></TR>" + sSalto;
				sArchivo += "	</TABLE>" + sSalto;
				oArchivo.Escribe(sArchivo);
				oArchivowa.Escribe(sArchivo);
				sArchivo = "";
			}
			sArchivo += "\n</td>" + sSalto;
			sArchivo += "\n</tr>" + sSalto;
			sArchivo += "\n</table>" + sSalto;
			sArchivo += "\n</body>" + sSalto;
			sArchivo += "\n</html>" + sSalto;
			oArchivo.Escribe(sArchivo);
			oArchivowa.Escribe(sArchivo);
			oArchivo.CierraArchivo();
			oArchivowa.CierraArchivo();
			
			oAnexoEstatus = null;
			oArchivo = null;
			oArchivowa = null;
		}catch(Throwable e){
			System.out.println("Error en Anexo2IV1.setHistory: " + e );
			sError = " - Anexo2IV1.setHistory: " + e ;
		}
		return sError;
	}
}